[project]
name = "rst_trap_finder"
version = "1.0.0"
description = "A clean toolkit for analyzing word association graphs to find RST trap words."
authors = [{name="RST Team", email="rst@example.com"}]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
keywords = ["game-theory", "graph-analysis", "word-games", "network-analysis"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Education", 
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Games/Entertainment",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
]

[project.optional-dependencies]
viz = [
    "matplotlib>=3.5.0",
    "networkx>=2.8.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
]
all = [
    "rst_trap_finder[viz,dev]"
]

[project.urls]
Homepage = "https://github.com/xhtdby/rst"
Repository = "https://github.com/xhtdby/rst.git"
"Bug Tracker" = "https://github.com/xhtdby/rst/issues"

[build-system]
requires = ["hatchling>=1.12.0"]
build-backend = "hatchling.build"

[project.scripts]
rst-find = "rst_trap_finder.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/rst_trap_finder"]

[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests", 
    "/data",
    "/examples",
    "/README.md",
    "/LICENSE",
    "/pyproject.toml"
]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

# Ruff configuration  
[tool.ruff]
line-length = 88
target-version = "py39"
select = ["E", "F", "I", "N", "W"]
ignore = ["E203"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["F401", "F811"]

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests"]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
